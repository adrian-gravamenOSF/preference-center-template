%%[
SET @IsDebug = false
SET @updateSFObject = false

SET @SubscriberDE = LookUp('Preference_Centre_Assets', 'Id', 'Asset', 'SubscriberDE')

/* Page IDs of confirmation and error pages */
SET @unsubscribePage = LookUp('Preference_Centre_Assets', 'Id', 'Asset', 'UnsubscribePage')
SET @errorPage = LookUp('Preference_Centre_Assets', 'Id', 'Asset', 'ErrorPage')

SET @sk = RequestParameter('sk')

SET @rows = LookupRows(@SubscriberDE, 'ContactKey',  @sk)

 IF ROWCOUNT(@rows) > 0 THEN
  SET @DataRow = Row(@rows,1)
  SET @EmailAddress = Field(@DataRow,'EmailAddress')
  ELSE
  Redirect(CloudPagesURL(@errorPage, 'msg', 'Subscriber not found.'))
 ENDIF

 IF EMPTY(@EmailAddress) THEN
    Redirect(CloudPagesURL(@errorPage, 'msg', 'Subscriber not found.'))
 ENDIF

SET @updatedAt = Format(SystemDateToLocalDate(NOW()), "yyyy-MM-ddThh:mm:ssZ")

/* channel preferences - set all to false */
SET @isEmailSubscribed = false
SET @isSmsSubscribed = false
SET @isPhoneSubscribed = false

/* SET whether updating or unsubscribing */

SET @sub = CreateObject('Subscriber')
SetObjectProperty(@sub,'SubscriberKey', @sk)
SetObjectProperty(@sub,'EmailAddress', @EmailAddress)
SET @options = CreateObject('UpdateOptions')
SET @save = CreateObject('SaveOption')
SetObjectProperty(@save,'SaveAction','UpdateAdd')
SetObjectProperty(@save,'PropertyName','*')
AddObjectArrayItem(@options,'SaveOptions', @save)
SET @ll_statusCode = InvokeUpdate(@sub, @ll_statusMsg, @update_sub_errorcode, @options)

/* Unsubscribe Subscriber in ET All Subscribers */
SET @jid = AttributeValue('jobid')
SET @listid = AttributeValue('listid')
SET @batchid = AttributeValue('_JobSubscriberBatchID')
var @lue
var @lue_prop
var @lue_statusCode
var @overallStatus
var @requestId
var @Response
var @Status
var @Error
/* create a request to inject an unsub event into the LogUnsubEvent platform table */
SET @lue = CreateObject('ExecuteRequest')
SetObjectProperty(@lue,'Name','LogUnsubEvent')
/* 1. define and associate Subscriber Key to the request */
SET @lue_prop = CreateObject('APIProperty')
SetObjectProperty(@lue_prop, 'Name', 'SubscriberKey')
SetObjectProperty(@lue_prop, 'Value', @sk)
AddObjectArrayItem(@lue, 'Parameters', @lue_prop)
/* 2. define and associate JobID to the request */
IF NOT EMPTY(@jid) THEN
    SET @lue_prop = CreateObject('APIProperty')
    SetObjectProperty(@lue_prop, 'Name', 'JobID')
    SetObjectProperty(@lue_prop, 'Value', @jid)
    AddObjectArrayItem(@lue, 'Parameters', @lue_prop)
ENDIF
/* 3. define and associate ListID to the request */
IF NOT EMPTY(@listid) THEN
    SET @lue_prop = CreateObject('APIProperty')
    SetObjectProperty(@lue_prop, 'Name', 'ListID')
    SetObjectProperty(@lue_prop, 'Value', @listid)
    AddObjectArrayItem(@lue, 'Parameters', @lue_prop)
ENDIF
/* 4. define and associate BatchID to the request */
IF NOT EMPTY(@batchid) THEN
    SET @lue_prop = CreateObject('APIProperty')
    SetObjectProperty(@lue_prop, 'Name', 'BatchID')
    SetObjectProperty(@lue_prop, 'Value', @batchid)
    AddObjectArrayItem(@lue, 'Parameters', @lue_prop)
ENDIF
/* 5. define and associate unsub reason to the request */
SET @lue_prop = CreateObject('APIProperty')
SetObjectProperty(@lue_prop, 'Name', 'Reason')
SetObjectProperty(@lue_prop, 'Value', @UnsubscribeReason)
AddObjectArrayItem(@lue, 'Parameters', @lue_prop)
/* finally, you invoke the request */
SET @lue_statusCode = InvokeExecute(@lue, @overallStatus, @requestId)
/* extract messages from the response */
SET @Response = Row(@lue_statusCode, 1)
SET @Status = Field(@Response,'StatusMessage')
SET @StatusCode = Field(@Response,'StatusCode')
SET @Error = Field(@Response,'ErrorCode')

/* retrieve and update salesforce object - check this */
/* 
IF @updateSFObject == true THEN
    SET @rs = RetrieveSalesforceObjects('Contact', 'FirstName, LastName, Email', 'Id', '=', @sk)
    SET @rowCount = RowCount(@rs)

    IF @rowCount > 0 THEN
        UpdateSingleSalesforceObject('Contact', @sk, 'HasOptedOutOfEmail', @isEmailSubscribed)
    ENDIF
ENDIF
*/

/* Update Master Data Extension */
SET @rowsUpdated = UpsertData(@SubscriberDE, 1, 'ContactKey', @sk,
'IsEmailSubscribed', @isEmailSubscribed,
'IsSmsSubscribed', @isSmsSubscribed,
'IsPhoneSubscribed', @isPhoneSubscribed,
'LastUpdated', @updatedAt)

IF @IsDebug != true THEN
    IF @rowsUpdated > 0 THEN
        Redirect(CloudPagesURL(@unsubscribePage))
    ELSE
        Redirect(CloudPagesURL(@errorPage))
    ENDIF
ENDIF
]%%

<!doctype html>
<html>

<head>
    <meta charset="utf-8">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
    <div>
        sk: %%=v(@sk)=%% <br />
        email address: %%=v(@EmailAddress)=%%
        <br />
        EmailIsEmailSubscribedSub: %%=v(@IsEmailSubscribed)=%% <br />
        PhoneIsSmsSubscribedSub: %%=v(@IsSmsSubscribed)=%% <br />
        IsPhoneSubscribed: %%=v(@IsPhoneSubscribed)=%% <br /><br />
        StatusCode: %%=v(@StatusCode)=%% <br />
        Status: %%=v(@Status)=%% <br />
        Error: %%=v(@Error)=%% <br />
    </div>
</body>

</html>